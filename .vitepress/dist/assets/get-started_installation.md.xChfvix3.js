import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.1L-BeKqY.js";const k=JSON.parse('{"title":"Installation Methods","description":"","frontmatter":{},"headers":[],"relativePath":"get-started/installation.md","filePath":"get-started/installation.md","lastUpdated":null}'),n={name:"get-started/installation.md"};function l(h,s,o,r,d,p){return e(),i("div",null,s[0]||(s[0]=[t('<h1 id="installation-methods" tabindex="-1">Installation Methods <a class="header-anchor" href="#installation-methods" aria-label="Permalink to &quot;Installation Methods&quot;">​</a></h1><p>We offer multiple methods to install screenie, so you can choose the one that best suits your needs.</p><h2 id="one-line-installation" tabindex="-1">One-line installation <a class="header-anchor" href="#one-line-installation" aria-label="Permalink to &quot;One-line installation&quot;">​</a></h2><p>For a fast and straightforward installation, you can use our one-line installer. This method is perfect for users who want to get started quickly without any hassle.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://screenie.host/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sh</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This method is coming soon, as the main webpage is not online <strong>yet</strong>.</p></div><h2 id="install-with-docker" tabindex="-1">Install with Docker <a class="header-anchor" href="#install-with-docker" aria-label="Permalink to &quot;Install with Docker&quot;">​</a></h2><p>To install screenie, you need to pull the latest image, with the command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ghcr.io/screeniehost/screenie:latest</span></span></code></pre></div><h3 id="creating-volumes" tabindex="-1">Creating volumes <a class="header-anchor" href="#creating-volumes" aria-label="Permalink to &quot;Creating volumes&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>If you don&#39;t create volumes with your container, <strong>all of the user data</strong> will be <strong>erased</strong> when deleting the container.</p></div><p>If you want pesistent storage for database, uploads and archives, create volumes with command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> volume</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> screenie-database-volume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> volume</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> screenie-uploads-volume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> volume</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> screenie-archives-volume</span></span></code></pre></div><h3 id="starting-up-the-container" tabindex="-1">Starting up the container <a class="header-anchor" href="#starting-up-the-container" aria-label="Permalink to &quot;Starting up the container&quot;">​</a></h3><p>If you&#39;ve managed to successfully create the volumes, then you can start up your application with the command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> screenie</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> screenie-database-volume:/var/lib/mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> screenie-uploads-volume:/screenie/src/uploads</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> screenie-archives-volume:/screenie/src/archives</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> screeniehost/screenie:latest</span></span></code></pre></div><h3 id="success" tabindex="-1">Success! <a class="header-anchor" href="#success" aria-label="Permalink to &quot;Success!&quot;">​</a></h3><p>You can now open screenie on the domain and port, you&#39;ve set it up in <code>data/config.json</code>!</p><h2 id="advanced-installation" tabindex="-1">Advanced Installation <a class="header-anchor" href="#advanced-installation" aria-label="Permalink to &quot;Advanced Installation&quot;">​</a></h2><p>For advanced installation, please visit our <a href="./advanced-installation">advanced Installation</a> guide.</p>',20)]))}const u=a(n,[["render",l]]);export{k as __pageData,u as default};
